name: CI/CD for Web App

on:
  push:
    branches: [main, master]
  pull_request:
    types: [opened, closed]
    branches: [main, master]

permissions:
  contents: read
      
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Set Environment Variables
      run: |
        echo "MONGODB_USER=${{ secrets.MONGODB_USER }}" >> $GITHUB_ENV
        echo "MONGO_PWD=${{ secrets.MONGO_PWD }}" >> $GITHUB_ENV
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
        echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r web_app/requirements.txt
        pip install pytest pylint black
    - name: Run Pylint
      run: pylint web_app/app.py --ignore-patterns='.*\.pb2\.py,.*\.pb2_grpc\.py'
    - name: Run Black
      run: black web_app/
    #- name: Run tests
    #  run: pytest tests/web_app_tests.py

    # Additional step to log into Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # Building Docker image and push to Docker Hub
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: bonnychavarria/webapp:latest

    # Deploy to Digital Ocean using SSH
    - name: Deploy to Digital Ocean
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          docker pull bonnychavarria/webapp:latest
          docker stop web-app || true
          docker rm web-app || true
          docker run -d --name web-app --restart unless-stopped bonnychavarria/webapp:latest
